[{"authors":null,"categories":null,"date":1500966118,"description":"","dir":"posts/","expirydate":-62135596800,"fuzzywordcount":700,"keywords":null,"kind":"page","lang":"en","lastmod":1500966118,"objectID":"d82e9b0bc200b4fb2e46e916d1955784","permalink":"https://codingo.com/posts/2017-07-25-decompiling-csharp-by-example-with-cracknet/","publishdate":"2017-07-25T17:01:58+10:00","readingtime":3,"relpermalink":"/posts/2017-07-25-decompiling-csharp-by-example-with-cracknet/","section":"posts","summary":"What is Cracknet? As a part of the SecTalks May CTF I built a .Net reverse engineering challenge, Cracknet. I\u0026rsquo;ve since made this available on Github, here.\nAlthough it\u0026rsquo;s possible to complete this challenge by bypassing a JMP instruction in assembly the intention of this challenge was to introduce participants to decompiling .Net applications by patching the application.\nExploring CrackNet functionality When you first open CrackNet you\u0026rsquo;re presented with the following:","tags":["reverse-engineering","ctf"],"title":"Decompiling C# by Example with Cracknet","type":"posts","url":"https://codingo.com/posts/2017-07-25-decompiling-csharp-by-example-with-cracknet/","weight":0,"wordcount":636}]